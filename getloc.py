#!/usr/bin/python3
# coding: utf-8

'''
query players.db to find location coordinates
'''

import sqlite3
import sys
import math
import myutil
from common import dist


SQLX = "cast(round(x) as int) as x"
SQLY = "cast(round(y) as int) as y"
RANGE = 180

class Solution():
    ''' sqlite and query '''

    def __init__(self):
        # get save dir from config.json
        self.jsondata = myutil.read_jsonfile('config.json')
        # full path to players.db
        self.playerdb = self.jsondata.get('path') + '/' + 'players.db'
        # full path to vehicles.db
        self.vehicledb = self.jsondata.get('path') + '/' + 'vehicles.db'
        self.vehicletxt = '_vehicle.py'
        self.playerx = 0
        self.playery = 0
        self.vehicles = []


    def query_xy(self):
        ''' query x, y location '''
        conn = sqlite3.connect(self.playerdb)
        sql = f'SELECT name, {SQLX}, {SQLY} FROM localPlayers'
        res = conn.execute(sql)
        (name, x, y) = res.fetchone()
        self.playerx = x
        self.playery = y
        print(f'player name: {name} at location: {x}x{y}')
        print(f'refer to online map: https://map.projectzomboid.com/#{x}x{y}')

    def dump_vehicles(self):
        ''' query all location of vehicles '''
        conn = sqlite3.connect(self.vehicledb)
        cursor = conn.cursor()
        sql = f"SELECT {SQLX}, {SQLY} FROM vehicles"
        cursor.execute(sql)
        records = cursor.fetchall()

        cnt = 0
        with open(self.vehicletxt, "wt", encoding='utf-8') as f:
            print("# generated by getloc.py...", file=f)
            print("_VEHICLES = [", file=f)
            for row in records:
                ln = f'({row[0]}, {row[1]}),'
                self.vehicles.append((row[0], row[1]))
                print(ln, file=f)
                cnt += 1
            print("]", file=f)
        print(f'dump {cnt} vehicles to {self.vehicletxt}')

    def find_nearby_vehicles(self):
        ''' find nearby vehicles '''
        print('find_nearby_vehicles:')
        print('dist', 'x,y', 'url')
        for v in self.vehicles:
            d = dist.dist(self.playerx, self.playery, v[0], v[1])
            if d < RANGE:
                url = f'https://map.projectzomboid.com/#{v[0]}x{v[1]}'
                print(f'"{d:.3f}","{v}","{url}"')

    def run(self):
        ''' run '''
        self.query_xy()
        self.dump_vehicles()
        self.find_nearby_vehicles()

def main():
    ''' main '''
    sol = Solution()
    sol.run()

if __name__ == '__main__':
    main()
